name: Run AMI

on:
  workflow_dispatch:
    inputs:
      ec2-name:
        description: Run AMI
        required: true
        default: "Run AMI"
        type: string

jobs:
  process-commit-message:
    runs-on: ubuntu-latest

    steps:
      - name: Set initial Terraform status
        run: echo "TERRAFORM_STATUS=❌ Failed" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Init Terraform
        run: terraform init

      - name: Plan Terraform
        run: terraform plan

      - name: Apply Terraform
        id: apply
        run: |
          terraform apply -auto-approve | tee output.txt
          
          # Витягування значень із логів
          AMI_ID=$(awk -F'ami_id = "' '{print $2}'tail -3 output.txt | awk -F'"' '{print $1}')
          INSTANCE_ID=$(awk -F'instance_id = "' '{print $2}'tail -3 output.txt | awk -F'"' '{print $1}')
          INSTANCE_IP=$(awk -F'instance_ip = "' '{print $2}'tail -3 output.txt | awk -F'"' '{print $1}')
           
          # Збереження значень як змінних середовища для подальших кроків
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
      
          # Виведення значень змінних
          echo "AMI_ID: $AMI_ID"
          echo "INSTANCE_ID: $INSTANCE_ID"
          echo "INSTANCE_IP: $INSTANCE_IP"

      - name: Collect status
        id: collect_status
        run: |
          echo "TERRAFORM_STATUS=$([[ '${{ steps.apply.outcome }}' == 'success' ]] && echo '✅ Success')" >> $GITHUB_ENV

      - name: Send Telegram Notification
        if: always()
        uses: cbrgm/telegram-github-action@v1
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            *AMI Id*: ${{ env.AMI_ID }}
            *Instance Id*: ${{ env.INSTANCE_ID }}
            *Public IP*: ${{ env.INSTANCE_IP }}
            *Terraform Apply Status*: ${{ env.TERRAFORM_STATUS }}
